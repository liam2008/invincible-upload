(function() {
	var app = angular.module('app.analysis.task', []);
	app.controller('taskCtrl', ['$scope', 'netManager', 'DTOptionsBuilder',
		function($scope, netManager, DTOptionsBuilder) {
			$scope.dtOptions = DTOptionsBuilder.newOptions()
				.withDOM('<"html5buttons"B>lTfgitp')
				.withButtons([])
				.withOption('language', {
					"sProcessing": "处理中...",
					"sLengthMenu": "显示 _MENU_ 项结果",
					"sZeroRecords": "没有匹配结果",
					"sInfo": "显示第 _START_ 至 _END_ 项结果，共 _TOTAL_ 项",
					"sInfoEmpty": "显示第 0 至 0 项结果，共 0 项",
					"sInfoFiltered": "(由 _MAX_ 项结果过滤)",
					"sSearch": "搜索:",
					"sEmptyTable": "表中数据为空",
					"sLoadingRecords": "载入中...",
					"oPaginate": {
						"sFirst": "首页",
						"sPrevious": "上页",
						"sNext": "下页",
						"sLast": "末页"
					}
				})
				.withOption('order', [
					[0, 'desc']
				]);
			$scope.where = {
				classify: 'amws'
			};
			$scope.handlePagination = function(page) {
				$scope.where.currentPage = page;
				netManager.get('/appraise/reviewContent', $scope.where).then(function(res) {
					$scope.reviewList = res.data.content;
					$scope.taskList = res.data.task;
					$scope.where.taskId = res.data.task[0];
					$scope.pageCount = 0 || Math.ceil(res.data.pageTotal / 10)
				})
			}
			$scope.handlePagination(1)
			$scope.active = function(show) {
				$scope.activeShow = show;
				$scope.activeItem = {};
			};

			$scope.submitSave = function() {
				var list = [];
				var str = $scope.activeItem.content.split('\n');
				var item = str[0].toLowerCase().split('	');
				if(item[0] == 'asin' && item[1] == 'side' && item[2] == '品牌') {
					delete $scope.err;
					for(var i = 1; i < str.length; i++) {
						var arr = str[i].split('\t');
						list.push({
							asin: arr[0],
							side: arr[1],
							brand: arr[2]
						})
					}
					netManager.post('/appraise/setReviewDescTask', {
						content: list
					}).then(function(res) {
						swal('添加成功！', 'success');
						$scope.active(null)
					})
				} else {
					$scope.err = '格式错误！请重新输入'
				}
			};

			function s2ab(s) {
				if(typeof ArrayBuffer !== 'undefined') {
					var buf = new ArrayBuffer(s.length);
					var view = new Uint8Array(buf);
					for(var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;
					return buf;
				} else {
					var buf = new Array(s.length);
					for(var i = 0; i != s.length; ++i) buf[i] = s.charCodeAt(i) & 0xFF;
					return buf;
				}
			}

			var genExcel = function(excelData) {
				var wopts = {
					bookType: 'xlsx',
					bookSST: false,
					type: 'binary'
				}; //这里的数据是用来定义导出的格式类型
				var wb = {
					SheetNames: ['Sheet1'],
					Sheets: {},
					Props: {}
				};
				wb.Sheets['Sheet1'] = XLSX.utils.json_to_sheet(excelData);
				saveAs(new Blob([s2ab(XLSX.write(wb, wopts))], {
					type: "application/octet-stream"
				}), "review" + '.' + (wopts.bookType == "biff2" ? "xls" : wopts.bookType));
			}

			$scope.excel = function() {
				netManager.get('/appraise/reviewExcel', $scope.where).then(function(res) {
					var data = res.data || {};
					var content = data.content || [];
					genExcel(content);
				})
			}

			$scope.handleTask = function(item) {
				$('#taskModal').modal('show')
				$scope.handleSubmitTask = function(val) {
					item.taskId = val;
					$scope.handlePagination(1);
					$('#taskModal').modal('hide')
				}
			}
			$scope.handleDelTask = function(item) {
				delete item.taskId
			}
			$scope.handleClassify = function() {
				delete $scope.where.taskId;
				$scope.handlePagination(1)
			}

		}
	])
})();